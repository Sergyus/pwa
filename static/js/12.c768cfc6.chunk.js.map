{"version":3,"sources":["components/Title/styles.module.scss","components/Title/Title.tsx","components/UI/CheckboxLabels.tsx","components/UI/FloatingActionButtons.tsx","components/UI/SwitchLabels.tsx","pages/Ui/Ui.tsx"],"names":["module","exports","Title","props","className","styles","title","GreenCheckbox","withStyles","root","green","color","checked","Checkbox","CheckboxLabels","React","useState","checkedA","checkedB","checkedF","checkedG","state","setState","handleChange","event","target","name","FormGroup","row","FormControlLabel","control","onChange","label","disabled","indeterminate","useStyles","makeStyles","theme","createStyles","margin","spacing","extendedIcon","marginRight","FloatingActionButtons","classes","Fab","aria-label","variant","SwitchLabels","Switch","Ui","Button","href","ButtonGroup","disableElevation","size"],"mappings":"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","file":"static/js/12.c768cfc6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__r6XvL\"};","import styles from './styles.module.scss';\nimport React from 'react';\n\ntype Props = {\n  title: string;\n};\n\nexport default function Title(props: Props): JSX.Element {\n  return <h1 className={styles.title}>{props.title}</h1>;\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    'color': green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n\nexport default function CheckboxLabels(): JSX.Element {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  }\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedA}\n            onChange={handleChange}\n            name=\"checkedA\"\n          />\n        }\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n      <FormControlLabel\n        disabled\n        control={<Checkbox checked name=\"checkedE\" />}\n        label=\"Disabled\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedF}\n            onChange={handleChange}\n            name=\"checkedF\"\n            indeterminate\n          />\n        }\n        label=\"Indeterminate\"\n      />\n      <FormControlLabel\n        control={\n          <GreenCheckbox\n            checked={state.checkedG}\n            onChange={handleChange}\n            name=\"checkedG\"\n          />\n        }\n        label=\"Custom color\"\n      />\n    </FormGroup>\n  );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n  }),\n);\n\nexport default function FloatingActionButtons(): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Fab color=\"primary\" aria-label=\"add\">\n        <AddIcon />\n      </Fab>\n      <Fab color=\"secondary\" aria-label=\"edit\">\n        <EditIcon />\n      </Fab>\n      <Fab variant=\"extended\">\n        <NavigationIcon className={classes.extendedIcon} />\n        Navigate\n      </Fab>\n      <Fab disabled aria-label=\"like\">\n        <FavoriteIcon />\n      </Fab>\n    </div>\n  );\n}\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels(): JSX.Element {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  }\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedA}\n            onChange={handleChange}\n            name=\"checkedA\"\n          />\n        }\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedB}\n            onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n      <FormControlLabel control={<Switch />} label=\"Uncontrolled\" />\n      <FormControlLabel disabled control={<Switch />} label=\"Disabled\" />\n      <FormControlLabel\n        disabled\n        control={<Switch checked />}\n        label=\"Disabled\"\n      />\n    </FormGroup>\n  );\n}\n","import React from 'react';\nimport Title from '@components/Title';\nimport { createStyles, makeStyles } from '@material-ui/styles';\nimport { Button, ButtonGroup, Theme } from '@material-ui/core';\nimport CheckboxLabels from '@components/UI/CheckboxLabels';\nimport FloatingActionButtons from '@components/UI/FloatingActionButtons';\nimport SwitchLabels from '@components/UI/SwitchLabels';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }),\n);\n\nexport default function Ui(): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div>\n      <Title title=\"UI\" />\n\n      <div className={classes.root}>\n        <Button variant=\"contained\">Default</Button>\n        <Button variant=\"contained\" color=\"primary\">\n          Primary\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Secondary\n        </Button>\n        <Button variant=\"contained\" disabled>\n          Disabled\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n          Link\n        </Button>\n      </div>\n\n      <br />\n\n      <div className={classes.root}>\n        <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>three</Button>\n          <Button>Four</Button>\n        </ButtonGroup>\n        <ButtonGroup disableElevation variant=\"contained\" color=\"secondary\">\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>three</Button>\n          <Button>Four</Button>\n        </ButtonGroup>\n      </div>\n\n      <br />\n\n      <div className={classes.root}>\n        <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>Three</Button>\n        </ButtonGroup>\n        <ButtonGroup\n          color=\"secondary\"\n          aria-label=\"outlined secondary button group\"\n        >\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>Three</Button>\n        </ButtonGroup>\n        <ButtonGroup\n          size=\"large\"\n          color=\"primary\"\n          aria-label=\"large outlined primary button group\"\n        >\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>Three</Button>\n        </ButtonGroup>\n      </div>\n\n      <div className={classes.root}>\n        <CheckboxLabels />\n      </div>\n\n      <div className={classes.root}>\n        <FloatingActionButtons />\n      </div>\n\n      <div className={classes.root}>\n        <SwitchLabels />\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}